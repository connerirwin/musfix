; Sorts


; Constants




; Uninterpreted Functions


; Qualifiers
(qualif Nat ((v Int)) (<= 0 v))
(qualif N10 ((v Int)) (= 10 v))
(qualif N20 ((v Int)) (= 20 v))

; Well-formedness Constraints
(wf $k1 ((lq_karg$v##k1 Int)))
(wf $k0 ((lq_karg$v##k0 Int)))

;  Constraints
(constraint (forall ((_VV##1 Int)) (=> (= _VV##1 10) ($k0 _VV##1))))
(constraint (forall ((_VV##2 Int)) (=> (= _VV##2 20) ($k0 _VV##2))))
(constraint (forall ((_VV##3 Int)(x0 Int)(v Int)) (=> (and ($k0 v) (= _VV##3 (+ x0 7))) ($k1 _VV##3))))
(constraint (forall ((_VV##4 Int)(x1 Int)(v Int)) (=> (and ($k1 v) (= _VV##4 (+ x1 9))) ($k0 _VV##4))))
(constraint (forall ((_VV##5 Int)(x1 Int)(v Int)) (=> (and ($k1 v) (= _VV##5 x1)) (<= 0 _VV##5))))

