; Uninterpreted Sorts


; Uninterpreted Functions


; Qualifiers


; Well-formedness constraints


; Horn constraints
(constraint (forall ((m1 (Map_t Int Int))(v1 Int)) (=> (and (= m1 (Map_default 0)) (= v1 (Map_select m1 100))) (= v1 0))))
(constraint (forall ((m1 (Map_t Int Int))(m2 (Map_t Int Int))(v2 Int)) (=> (and (= m1 (Map_default 0)) (and (= m2 (Map_store (Map_store m1 10 1) 20 1)) (= v2 (Map_select m2 100)))) (= v2 0))))
(constraint (forall ((m1 (Map_t Int Int))(m2 (Map_t Int Int))(v3 Int)) (=> (and (= m1 (Map_default 0)) (and (= m2 (Map_store (Map_store m1 10 1) 20 1)) (= v3 (Map_select m2 10)))) (= v3 1))))
(constraint (forall ((m1 (Map_t Int Int))(m2 (Map_t Int Int))(m3 (Map_t Int Int))(v4 Int)) (=> (and (= m1 (Map_default 0)) (and (= m2 (Map_store (Map_store m1 10 1) 20 1)) (and (= m3 (Map_store (Map_store m1 20 1) 10 1)) True))) (= m2 m3))))
(constraint (forall ((m1 (Map_t Int Int))(m2 (Map_t Int Int))(m3 (Map_t Int Int))(m4 (Map_t Int Int))(m5 (Map_t Int Int))(v5 Int)) (=> (and (= m1 (Map_default 0)) (and (= m2 (Map_store (Map_store m1 10 1) 20 1)) (and (= m3 (Map_store (Map_store m1 20 1) 10 1)) (and (= m4 (Map_store m1 10 1)) (and (= m5 (Map_store m1 20 1)) True))))) (= m2 (Map_union m4 m5)))))
