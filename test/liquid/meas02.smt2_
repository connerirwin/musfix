; Functions
(declare-fun sumD (([] unknown [given FReal])) unknown [given FReal])

; Qualifiers
(qualif SumZ ((v ([] unknown [given FReal]))) (= (sumD v) 0.00000))
(qualif SumZ ((v ([] unknown [given FReal]))) (= (/ (sumD v) (sumD v)) 1.00000))


; Well-formedness constraints
(wf $k1 ((v ([] unknown [given FReal]))))


; Horn constraints
(constraint (forall ((zero unknown [given FReal])(pumpkin ([] unknown [given FReal]))(v1 ([] unknown [given FReal]))) (=> (and (= VV 0.00000) (and (= (apply sumD VV) 0.00000) (= v1 pumpkin))) ($k1 v1))))
(constraint (forall ((v2 ([] unknown [given FReal]))) (=> ($k1 v2) (= (apply sumD v2) 0.00000))))
