
Preparing to find greatest fixpoint...

Inputs
--------
Reading from file test/./sample/bool03.smt2
SortDecl "Str" 0
UninterpFunction "cat" [] (DataS "Str" [])
UninterpFunction "not_the_hippopotamus" [] (DataS "Str" [])
UninterpFunction "dog" [] (DataS "Str" [])
Qualifier "Implies" [Var BoolS "v",Var BoolS "x"] (Binary Implies (Var BoolS "x") (Var BoolS "v"))
WFConstraint "$k1" [Var BoolS "bx",Var BoolS "v"]
HornConstraint [Var BoolS "bx",Var BoolS "v1"] (Binary Implies (Binary And (BoolLit True) (Binary Implies (Var BoolS "bx") (Var BoolS "v1"))) (Unknown (fromList [("bx",Var BoolS "bx"),("v",Var BoolS "v1")]) "$k1"))
HornConstraint [Var BoolS "bx",Var BoolS "zx",Var BoolS "v2"] (Binary Implies (Binary And (BoolLit True) (Binary And (Unary Not (Binary Eq (Func (DataS "Str" []) "cat" []) (Func (DataS "Str" []) "dog" []))) (Unknown (fromList [("bx",Var BoolS "bx"),("v",Var BoolS "v2")]) "$k1"))) (Binary Implies (Var BoolS "bx") (Var BoolS "v2")))

QMAP
--------
fromList [("$k1",QSpace {_qualifiers = [Binary Implies (Var BoolS "v") (Var BoolS "bx"),Binary Implies (Var BoolS "bx") (Var BoolS "v")], _maxCount = 2})]

Candidates
--------
[Candidate {solution = fromList [("$k1",fromList [Binary Implies (Var BoolS "bx") (Var BoolS "v")])], validConstraints = fromList [Binary Implies (Binary And (BoolLit True) (Binary And (Unary Not (Binary Eq (Func (DataS "Str" []) "cat" []) (Func (DataS "Str" []) "dog" []))) (Unknown (fromList [("bx",Var BoolS "bx"),("v",Var BoolS "v2")]) "$k1"))) (Binary Implies (Var BoolS "bx") (Var BoolS "v2")),Binary Implies (Binary And (BoolLit True) (Binary Or (Unary Not (Var BoolS "bx")) (Var BoolS "v1"))) (Unknown (fromList [("bx",Var BoolS "bx"),("v",Var BoolS "v1")]) "$k1")], invalidConstraints = fromList [], label = "0"}]


Final candidates: 
0: [$k1 -> {bx [37m==>[0m v}] (2 0)

