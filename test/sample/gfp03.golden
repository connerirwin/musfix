
Preparing to find greatest fixpoint...

Inputs
--------
Reading from file test/sample/gfp03.msmt
Qualifier "Pos" [Var IntS "v"] (Binary Le (IntLit 0) (Var IntS "v"))
Qualifier "Neg" [Var IntS "v"] (Binary Le (Var IntS "v") (IntLit 0))
Qualifier "NeqZ" [Var IntS "v"] (Unary Not (Binary Eq (Var IntS "v") (IntLit 0)))
Qualifier "GtTen" [Var IntS "v"] (Binary Lt (Var IntS "v") (IntLit 10))
Qualifier "False" [] (Binary Eq (IntLit 66) (IntLit 77))
WFConstraint "$k0" [Var IntS "b1"]
HornConstraint [Var IntS "v1"] (Binary Implies (Unknown (fromList [("b1",Var IntS "v1")]) "$k0") (Binary Lt (IntLit 0) (Binary Plus (Var IntS "v1") (IntLit 1))))
HornConstraint [Var IntS "v3"] (Binary Implies (Unknown (fromList [("b1",Var IntS "v3")]) "$k0") (Binary Gt (IntLit 11) (Binary Plus (Var IntS "v3") (IntLit 1))))
HornConstraint [Var IntS "v2"] (Binary Implies (Binary Eq (Var IntS "v2") (IntLit 9)) (Unknown (fromList [("b1",Var IntS "v2")]) "$k0"))
HornConstraint [Var IntS "v4"] (Binary Implies (Binary And (Binary Lt (Var IntS "v4") (IntLit 9)) (Binary Gt (Var IntS "v4") (IntLit 3))) (Unknown (fromList [("b1",Var IntS "v4")]) "$k0"))

QMAP
--------
fromList [("$k0",QSpace {_qualifiers = [Binary Le (IntLit 0) (Var IntS "b1"),Binary Le (Var IntS "b1") (IntLit 0),Unary Not (Binary Eq (Var IntS "b1") (IntLit 0)),Binary Lt (Var IntS "b1") (IntLit 10),Binary Eq (IntLit 66) (IntLit 77)], _maxCount = 5})]

Candidates
--------
[Candidate {solution = fromList [("$k0",fromList [Binary Lt (Var IntS "b1") (IntLit 10),Binary Le (IntLit 0) (Var IntS "b1")])], validConstraints = fromList [Binary Implies (Unknown (fromList [("b1",Var IntS "v1")]) "$k0") (Binary Lt (IntLit 0) (Binary Plus (Var IntS "v1") (IntLit 1))),Binary Implies (Unknown (fromList [("b1",Var IntS "v3")]) "$k0") (Binary Gt (IntLit 11) (Binary Plus (Var IntS "v3") (IntLit 1))),Binary Implies (Binary Eq (Var IntS "v2") (IntLit 9)) (Unknown (fromList [("b1",Var IntS "v2")]) "$k0"),Binary Implies (Binary And (Binary Lt (Var IntS "v4") (IntLit 9)) (Binary Gt (Var IntS "v4") (IntLit 3))) (Unknown (fromList [("b1",Var IntS "v4")]) "$k0")], invalidConstraints = fromList [], label = "0"}]


Final candidates: 
0: [$k0 -> {b1 [37m<[0m [36m10[0m, [36m0[0m [37m<=[0m b1}] (4 0)

