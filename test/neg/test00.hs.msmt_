; Uninterpreted Sorts
(declare-sort List 1)


; Constants
(declare-const GHC.Types.True$35$6u GHC.Types.Bool)
(declare-const GHC.Types.False$35$68 GHC.Types.Bool)


; Distinct Constants


; Uninterpreted Functions
(declare-fun runFun ((Arrow @a0 @a1) @a0) @a1)
(declare-fun addrLen (Int) Int)
(declare-fun x_Tuple21 ((Tuple @a0 @a1)) @a0)
(declare-fun xsListSelector ((List @a0)) (List @a0))
(declare-fun x_Tuple65 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5)) @a4)
(declare-fun x_Tuple55 ((Tuple @a0 @a1 @a2 @a3 @a4)) @a4)
(declare-fun x_Tuple33 ((Tuple @a0 @a1 @a2)) @a2)
(declare-fun x_Tuple77 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5 @a6)) @a6)
(declare-fun papp3 ((Pred @a0 @a1 @a2) @a3 @a4 @a5) Bool)
(declare-fun x_Tuple63 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5)) @a2)
(declare-fun x_Tuple41 ((Tuple @a0 @a1 @a2 @a3)) @a0)
(declare-fun papp4 ((Pred @a0 @a1 @a2 @a6) @a3 @a4 @a5 @a7) Bool)
(declare-fun x_Tuple64 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5)) @a3)
(declare-fun autolen (@a0) Int)
(declare-fun x_Tuple52 ((Tuple @a0 @a1 @a2 @a3 @a4)) @a1)
(declare-fun null ((List @a0)) Bool)
(declare-fun papp2 ((Pred @a0 @a1) @a2 @a3) Bool)
(declare-fun GHC.Types.I$35$$35$6c (Int) Int)
(declare-fun x_Tuple62 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5)) @a1)
(declare-fun fromJust ((GHC.Base.Maybe @a0)) @a0)
(declare-fun x_Tuple53 ((Tuple @a0 @a1 @a2 @a3 @a4)) @a2)
(declare-fun x_Tuple71 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5 @a6)) @a0)
(declare-fun x_Tuple74 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5 @a6)) @a3)
(declare-fun len ((@a0 @a1)) Int)
(declare-fun x_Tuple22 ((Tuple @a0 @a1)) @a1)
(declare-fun x_Tuple66 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5)) @a5)
(declare-fun x_Tuple44 ((Tuple @a0 @a1 @a2 @a3)) @a3)
(declare-fun xListSelector ((List @a0)) @a0)
(declare-fun strLen (Int) Int)
(declare-fun x_Tuple72 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5 @a6)) @a1)
(declare-fun isJust ((GHC.Base.Maybe @a0)) Bool)
(declare-fun Prop (GHC.Types.Bool) Bool)
(declare-fun x_Tuple31 ((Tuple @a0 @a1 @a2)) @a0)
(declare-fun x_Tuple75 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5 @a6)) @a4)
(declare-fun papp1 ((Pred @a0) @a0) Bool)
(declare-fun x_Tuple61 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5)) @a0)
(declare-fun x_Tuple43 ((Tuple @a0 @a1 @a2 @a3)) @a2)
(declare-fun x_Tuple51 ((Tuple @a0 @a1 @a2 @a3 @a4)) @a0)
(declare-fun x_Tuple73 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5 @a6)) @a2)
(declare-fun x_Tuple54 ((Tuple @a0 @a1 @a2 @a3 @a4)) @a3)
(declare-fun cmp (GHC.Types.Ordering) GHC.Types.Ordering)
(declare-fun x_Tuple32 ((Tuple @a0 @a1 @a2)) @a1)
(declare-fun x_Tuple76 ((Tuple @a0 @a1 @a2 @a3 @a4 @a5 @a6)) @a5)
(declare-fun snd ((Tuple @a0 @a1)) @a1)
(declare-fun fst ((Tuple @a0 @a1)) @a0)
(declare-fun x_Tuple42 ((Tuple @a0 @a1 @a2 @a3)) @a1)


; Qualifiers
(qualif Fst ((v @a1)(y @a0)) (= v (fst y)))
(qualif Snd ((v @a1)(y @a0)) (= v (snd y)))
(qualif IsEmp ((v GHC.Types.Bool)(xs (List @a0))) (= (Prop v) (> (len xs) 0)))
(qualif IsEmp ((v GHC.Types.Bool)(xs (List @a0))) (= (Prop v) (= (len xs) 0)))
(qualif ListZ ((v (List @a0))) (= (len v) 0))
(qualif ListZ ((v (List @a0))) (>= (len v) 0))
(qualif ListZ ((v (List @a0))) (> (len v) 0))
(qualif CmpLen ((v (List @a1))(xs (List @a0))) (= (len v) (len xs)))
(qualif CmpLen ((v (List @a1))(xs (List @a0))) (>= (len v) (len xs)))
(qualif CmpLen ((v (List @a1))(xs (List @a0))) (> (len v) (len xs)))
(qualif CmpLen ((v (List @a1))(xs (List @a0))) (<= (len v) (len xs)))
(qualif CmpLen ((v (List @a1))(xs (List @a0))) (< (len v) (len xs)))
(qualif EqLen ((v Int)(xs (List @a0))) (= v (len xs)))
(qualif LenEq ((v (List @a0))(x Int)) (= x (len v)))
(qualif LenDiff ((v (List @a0))(x Int)) (= (len v) (+ x 1)))
(qualif LenDiff ((v (List @a0))(x Int)) (= (len v) (- x 1)))
(qualif LenAcc ((v Int)(xs (List @a0))(n Int)) (= v (+ (len xs) n)))
(qualif Bot ((v @a0)) (= 0 1))
(qualif Bot ((v @a0)) (= 0 1))
(qualif Bot ((v @a0)) (= 0 1))
(qualif Bot ((v Bool)) (= 0 1))
(qualif Bot ((v Int)) (= 0 1))
(qualif CmpZ ((v @a0)) (< v 0))
(qualif CmpZ ((v @a0)) (<= v 0))
(qualif CmpZ ((v @a0)) (> v 0))
(qualif CmpZ ((v @a0)) (>= v 0))
(qualif CmpZ ((v @a0)) (= v 0))
(qualif CmpZ ((v @a0)) (not (= v 0)))
(qualif Cmp ((v @a0)(x @a0)) (< v x))
(qualif Cmp ((v @a0)(x @a0)) (<= v x))
(qualif Cmp ((v @a0)(x @a0)) (> v x))
(qualif Cmp ((v @a0)(x @a0)) (>= v x))
(qualif Cmp ((v @a0)(x @a0)) (= v x))
(qualif Cmp ((v @a0)(x @a0)) (not (= v x)))
(qualif One ((v Int)) (= v 1))
(qualif True ((v Bool)) v)
(qualif False ((v Bool)) (not v))
(qualif True1 ((v GHC.Types.Bool)) (Prop v))
(qualif False1 ((v GHC.Types.Bool)) (not (Prop v)))
(qualif Papp ((v @a0)(p (Pred @a0))) (papp1 p v))
(qualif Papp2 ((v @a1)(x @a0)(p (Pred @a1 @a0))) (papp2 p v x))
(qualif Papp3 ((v @a2)(x @a0)(y @a1)(p (Pred @a2 @a0 @a1))) (papp3 p v x y))


; Well-formedness Constraints
(wf $k_$36$35$36$251 ((GHC.Types.EQ$35$6U GHC.Types.Ordering)(GHC.Types.LT$35$6S GHC.Types.Ordering)(GHC.Types.GT$35$6W GHC.Types.Ordering)(VV$35$250 Int)))
(wf $k_$36$35$36$222 ((GHC.Types.EQ$35$6U GHC.Types.Ordering)(GHC.Types.LT$35$6S GHC.Types.Ordering)(VV$35$221 Int)(GHC.Types.GT$35$6W GHC.Types.Ordering)))


; Horn Constraints
(constraint (forall ((GHC.Types.False$35$68 GHC.Types.Bool)(GHC.Types.True$35$6u GHC.Types.Bool)(GHC.Classes.$36$fOrdInt$35$rni (GHC.Classes.Ord Int))(GHC.Types.EQ$35$6U GHC.Types.Ordering)(Test0.x$35$rYP Int)(GHC.Types.LT$35$6S GHC.Types.Ordering)(lq_anf$36$_d119 Int)(GHC.Types.GT$35$6W GHC.Types.Ordering)(lq_anf$36$_d11a GHC.Types.Bool)(GHC.Types.True$35$6u GHC.Types.Bool)(lq_anf$36$_d11b GHC.Types.Bool)(GHC.Types.False$35$68 GHC.Types.Bool)(GHC.Types.False$35$68 GHC.Types.Bool)(GHC.Types.$91$$93$$35$6m (List @a0))(lq_anf$36$_d11b GHC.Types.Bool)(GHC.Types.True$35$6u GHC.Types.Bool)(lq_anf$36$_d11b GHC.Types.Bool)(GHC.Types.GT$35$6W GHC.Types.Ordering)(GHC.Types.LT$35$6S GHC.Types.Ordering)(GHC.Types.EQ$35$6U GHC.Types.Ordering)(v2 Int)(GHC.Base.Nothing$35$r1d (GHC.Base.Maybe @a0))(VV$35$313 Int)) (=> (and True (and True (and True (and (= VV$35$167 GHC.Types.EQ$35$6U) (and ($k_$36$35$36$251 GHC.Types.EQ$35$6U GHC.Types.LT$35$6S GHC.Types.GT$35$6W VV$35$250) (and (= VV$35$168 GHC.Types.LT$35$6S) (and (= lq_tmp$36$x$35$269 0) (and (= VV$35$169 GHC.Types.GT$35$6W) (and (= (apply Prop lq_tmp$36$x$35$275) (> Test0.x$35$rYP lq_anf$36$_d119)) (and (apply Prop v$35$4) (and (= lq_tmp$36$x$35$291 lq_anf$36$_d11a) (and (not (apply Prop v$35$5)) (and (not (apply Prop v$35$5)) (and True (and (= lq_tmp$36$x$35$299 lq_anf$36$_d11a) (and (apply Prop v$35$4) (and (and (= lq_tmp$36$x$35$299 lq_anf$36$_d11a) (and (apply Prop lq_tmp$36$x$35$299) (and (apply Prop lq_tmp$36$x$35$299) (apply Prop lq_tmp$36$x$35$299)))) (and (= (apply cmp VV$35$214) GHC.Types.GT$35$6W) (and (= (apply cmp VV$35$215) GHC.Types.LT$35$6S) (and (= (apply cmp VV$35$216) GHC.Types.EQ$35$6U) (and (= v2 Test0.x$35$rYP) (and True (= VV$35$313 Test0.x$35$rYP))))))))))))))))))))))) ($k_$36$35$36$222 GHC.Types.EQ$35$6U GHC.Types.LT$35$6S v2 GHC.Types.GT$35$6W))))
(constraint (forall ((GHC.Types.False$35$68 GHC.Types.Bool)(GHC.Types.True$35$6u GHC.Types.Bool)(GHC.Classes.$36$fOrdInt$35$rni (GHC.Classes.Ord Int))(lq_anf$36$_d118 Int)(GHC.Types.EQ$35$6U GHC.Types.Ordering)(GHC.Types.LT$35$6S GHC.Types.Ordering)(GHC.Types.GT$35$6W GHC.Types.Ordering)(GHC.Types.True$35$6u GHC.Types.Bool)(GHC.Types.False$35$68 GHC.Types.Bool)(GHC.Types.False$35$68 GHC.Types.Bool)(VV$35$328 Int)(GHC.Types.$91$$93$$35$6m (List @a0))(GHC.Types.True$35$6u GHC.Types.Bool)(GHC.Types.GT$35$6W GHC.Types.Ordering)(GHC.Types.LT$35$6S GHC.Types.Ordering)(GHC.Types.EQ$35$6U GHC.Types.Ordering)(GHC.Base.Nothing$35$r1d (GHC.Base.Maybe @a0))(v6 Int)) (=> (and True (and True (and True (and (= lq_tmp$36$x$35$254 0) (and (= VV$35$167 GHC.Types.EQ$35$6U) (and (= VV$35$168 GHC.Types.LT$35$6S) (and (= VV$35$169 GHC.Types.GT$35$6W) (and (apply Prop v$35$4) (and (not (apply Prop v$35$5)) (and (not (apply Prop v$35$5)) (and True (and True (and (apply Prop v$35$4) (and (= (apply cmp VV$35$214) GHC.Types.GT$35$6W) (and (= (apply cmp VV$35$215) GHC.Types.LT$35$6S) (and (= (apply cmp VV$35$216) GHC.Types.EQ$35$6U) (and True True))))))))))))))))) ($k_$36$35$36$251 GHC.Types.EQ$35$6U GHC.Types.LT$35$6S GHC.Types.GT$35$6W v6))))
(constraint (forall ((GHC.Types.False$35$68 GHC.Types.Bool)(lq_anf$36$_d116 Int)(VV$35$340 GHC.Types.Bool)(GHC.Types.True$35$6u GHC.Types.Bool)(lq_anf$36$_d117 GHC.Types.Bool)(GHC.Classes.$36$fOrdInt$35$rni (GHC.Classes.Ord Int))(GHC.Types.EQ$35$6U GHC.Types.Ordering)(GHC.Types.LT$35$6S GHC.Types.Ordering)(GHC.Types.GT$35$6W GHC.Types.Ordering)(GHC.Types.True$35$6u GHC.Types.Bool)(GHC.Types.False$35$68 GHC.Types.Bool)(GHC.Types.False$35$68 GHC.Types.Bool)(GHC.Types.$91$$93$$35$6m (List @a0))(GHC.Types.True$35$6u GHC.Types.Bool)(GHC.Types.GT$35$6W GHC.Types.Ordering)(GHC.Types.LT$35$6S GHC.Types.Ordering)(GHC.Types.EQ$35$6U GHC.Types.Ordering)(GHC.Base.Nothing$35$r1d (GHC.Base.Maybe @a0))(z$35$a10N Int)(v8 GHC.Types.Bool)) (=> (and True (and (= lq_tmp$36$x$35$229 100) (and (= VV$35$340 lq_anf$36$_d117) (and True (and (= (apply Prop lq_tmp$36$x$35$236) (>= z$35$a10N lq_anf$36$_d116)) (and True (and (= VV$35$167 GHC.Types.EQ$35$6U) (and (= VV$35$168 GHC.Types.LT$35$6S) (and (= VV$35$169 GHC.Types.GT$35$6W) (and (apply Prop v$35$4) (and (not (apply Prop v$35$5)) (and (not (apply Prop v$35$5)) (and True (and (apply Prop v$35$4) (and (= (apply cmp VV$35$214) GHC.Types.GT$35$6W) (and (= (apply cmp VV$35$215) GHC.Types.LT$35$6S) (and (= (apply cmp VV$35$216) GHC.Types.EQ$35$6U) (and True (and ($k_$36$35$36$222 GHC.Types.EQ$35$6U GHC.Types.LT$35$6S VV$35$221 GHC.Types.GT$35$6W) (= v8 lq_anf$36$_d117)))))))))))))))))))) (apply Prop v8))))
